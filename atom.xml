<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Show Something</title>
  <icon>https://www.gravatar.com/avatar/b958479d02219efe5c54de7794fe7b22</icon>
  <subtitle>Input &amp; Output</subtitle>
  <link href="http://degndaixingqiu.com/atom.xml" rel="self"/>
  
  <link href="http://degndaixingqiu.com/"/>
  <updated>2022-03-09T09:31:35.067Z</updated>
  <id>http://degndaixingqiu.com/</id>
  
  <author>
    <name>Karzh</name>
    <email>dengdaixingqiu@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基本数据结构</title>
    <link href="http://degndaixingqiu.com/posts/0/"/>
    <id>http://degndaixingqiu.com/posts/0/</id>
    <published>2022-03-09T09:15:41.858Z</published>
    <updated>2022-03-09T09:31:35.067Z</updated>
    
    <content type="html"><![CDATA[<p><strong>终端快捷运行语句：Python+文件名</strong></p><p>Python3 中有六个标准的数据类型： </p><p>Number（数值），String（字符串）， Tuple（元组）， List（列表），Set（集合），Dictionary（字典）</p><p><strong>Python 中的变量不需要声明。每个变量在使用前都必须 赋值，变量赋值以后该变量才会被创建</strong></p><h4 id="Number（数值）"><a href="#Number（数值）" class="headerlink" title="Number（数值）"></a>Number（数值）</h4><ul><li><p>int、float、bool、complex（复数）</p></li><li><p>int，表示为长整型</p></li><li><p>内置的 type() 函数可以用来查询变量所指的对象类型</p></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">12.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#"" ''均可表示字符串</span></span><br><span class="line">s1 = <span class="string">"hello"</span></span><br><span class="line">s2 = <span class="string">'world'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a),<span class="built_in">type</span>(b),<span class="built_in">type</span>(s1),<span class="built_in">type</span>(s2))</span><br><span class="line"></span><br><span class="line"><span class="comment">#%d表示输出整型数</span></span><br><span class="line"><span class="comment">#%.2d，表示长度为2，不满足则在前面补0，长度大于等于2则保持原样输出。</span></span><br><span class="line"><span class="comment">#%f表示输出浮点型，%.2f，表示保留小数点后2位。</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"b = %.2f  a = %d %s %s"</span> %(b,a,s1,s2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"%.2f"</span>  %b) <span class="comment">#12.50</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"%.3d"</span>  %b) <span class="comment">#012</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="comment">#元组,元素不需要具有相同类型,且一旦创建不可变</span></span><br><span class="line">y = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>] <span class="comment">#列表，元素可变</span></span><br><span class="line">z = {<span class="number">1</span>:<span class="number">2</span>,<span class="number">5</span>:<span class="number">6</span>,<span class="number">8</span>:<span class="number">7</span>} <span class="comment">#字典，通过key访问</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x,y,z)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(z[<span class="number">1</span>])</span><br></pre></td></tr></tbody></table></figure><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p><img src="/.com//Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20220302172013246.png" alt="image-20220302172013246"></p><ul><li><p><strong>“” ‘’均是字符串</strong></p></li><li><p>不支持char类型</p></li></ul><h4 id="bool类型"><a href="#bool类型" class="headerlink" title="bool类型"></a>bool类型</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语法严格，不可用01定义bool类型</span></span><br><span class="line"></span><br><span class="line">f = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(f)) <span class="comment">#bool</span></span><br><span class="line"></span><br><span class="line">t = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(t)) <span class="comment">#int</span></span><br></pre></td></tr></tbody></table></figure><h4 id="List-列表"><a href="#List-列表" class="headerlink" title="List[列表]"></a>List[列表]</h4><ul><li><p>列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）</p></li><li><p>列表内元素可以修改</p></li><li><p>index从0开始</p></li><li><p>列表同样可以被索引和截取，列表被截取 后返回一个包含所需元素的新列表。</p></li></ul><p><img src="/.com//../Typora/image-20220302181752916.png" alt="image-20220302181752916"></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">y = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">"p"</span>]</span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="string">'ege'</span>,<span class="literal">True</span>,y]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment">#[1, 2, 'ege', True, [1, 2, 3, 'p']]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#从Index = 1元素输出至结束，左闭右开</span></span><br><span class="line"><span class="built_in">print</span>(x[<span class="number">1</span>:])<span class="comment">#[2, 'ege', True, [1, 2, 3, 'p']]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(x))<span class="comment">#5</span></span><br><span class="line"></span><br><span class="line">y.append(<span class="number">2.3</span>)</span><br><span class="line"><span class="built_in">print</span>(y)<span class="comment">#[1, 2, 3, 'p', 2.3]</span></span><br><span class="line"></span><br><span class="line">y.clear()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(y))<span class="comment">#0</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Tuple（元组）"><a href="#Tuple（元组）" class="headerlink" title="Tuple（元组）"></a>Tuple（元组）</h4><ul><li>元组内元素不能修改</li><li>元素类型也可以不同</li><li><img src="/.com//../Typora/image-20220302215410899.png" alt="image-20220302215410899"></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tuple是()</span></span><br><span class="line">y1 = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">"p"</span>)</span><br><span class="line"></span><br><span class="line">x1 = (<span class="number">1</span>,<span class="number">2</span>,<span class="string">'ege'</span>,<span class="literal">True</span>,y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无法运行，tuple不支持改动元素</span></span><br><span class="line"><span class="comment"># y1[4] = 12.3 </span></span><br><span class="line"><span class="comment"># print(x1)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x1[<span class="number">3</span>]) <span class="comment"># 输出元组的第3个元素</span></span><br><span class="line"><span class="built_in">print</span>(x1[<span class="number">1</span>:<span class="number">3</span>]) <span class="comment">#输出1-3个元素</span></span><br><span class="line"><span class="built_in">print</span>(x1[<span class="number">2</span>:])  <span class="comment">#输出2之后所有包括2</span></span><br><span class="line"><span class="built_in">print</span>(x1*<span class="number">2</span>) <span class="comment">#输出两边x1</span></span><br><span class="line"><span class="built_in">print</span>(x1+y1) <span class="comment">#连接元组</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Set-集合"><a href="#Set-集合" class="headerlink" title="Set{集合}"></a>Set{集合}</h4><ul><li><p>无序不重复元素序列</p></li><li><p>{}或者set()</p></li><li><p>创建一个空集合必须用 set() 而不是 { }，因为 { } 是用 来创建一个空字典。</p></li><li><p>打印输出是从小到大按顺序输出，就算类型不同也可输出</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set</span></span><br><span class="line">x2 = {<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>}</span><br><span class="line"><span class="built_in">print</span>(x2) <span class="comment">#按顺序输出</span></span><br><span class="line">x2.add(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(x2)</span><br><span class="line"></span><br><span class="line">x4 = {<span class="string">"df"</span>,<span class="string">"grg"</span>,<span class="number">3</span>}</span><br><span class="line"><span class="built_in">print</span>(x4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x4 = <span class="built_in">set</span>([<span class="string">'g'</span>,<span class="string">'2'</span>,<span class="string">'t'</span>,<span class="string">'yhf'</span>]) <span class="comment">#{'2', 't', 'yhf', 'g'}</span></span><br><span class="line"><span class="built_in">print</span>(x4)</span><br><span class="line"></span><br><span class="line">x5 = <span class="built_in">set</span>(<span class="string">"dfkg"</span>)</span><br><span class="line"><span class="built_in">print</span>(x5) <span class="comment">#{'k', 'd', 'f', 'g'}</span></span><br></pre></td></tr></tbody></table></figure><p><img src="/.com//../Typora/image-20220303192627464.png" alt="image-20220303192627464"></p></li></ul><h4 id="Dictionary-字典"><a href="#Dictionary-字典" class="headerlink" title="Dictionary(字典)"></a>Dictionary(字典)</h4><ul><li>字典是另一种可变容器模型，且可存储任意类型对象。</li><li>字典的每个键值 key=&gt;value 对用冒号 : 分割，每个对 之间用逗号(,)分割，整个字典包括在花括号 {} 中。</li><li>字典是一种映射类型，<strong>字典用 { } 标识，它是一个无序 的 键(key) : 值(value) 的集合</strong></li><li><strong>键(key)必须使用不可变类型</strong></li><li>在同一个字典中，键(key)必须是唯一的</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Dictionary</span></span><br><span class="line">x6 = {<span class="number">3</span>:<span class="string">"fgg"</span>,<span class="number">2</span>:<span class="number">3.14</span>,<span class="number">4</span>:x5}</span><br><span class="line"><span class="built_in">print</span>(x6)</span><br><span class="line"></span><br><span class="line"><span class="comment">#拿走3</span></span><br><span class="line">x6.pop(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(x6)</span><br></pre></td></tr></tbody></table></figure><h4 id="类型转化"><a href="#类型转化" class="headerlink" title="类型转化"></a>类型转化</h4><p><img src="/.com//../Typora/image-20220303194032694.png" alt="image-20220303194032694"></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 类型转化</span></span><br><span class="line">a = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line">b = <span class="built_in">str</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>())</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;终端快捷运行语句：Python+文件名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python3 中有六个标准的数据类型： &lt;/p&gt;
&lt;p&gt;Number（数值），String（字符串）， Tuple（元组）， List（列表），Set（集合），Dictionary</summary>
      
    
    
    
    <category term="python" scheme="http://degndaixingqiu.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>My first blog</title>
    <link href="http://degndaixingqiu.com/posts/654572fa/"/>
    <id>http://degndaixingqiu.com/posts/654572fa/</id>
    <published>2022-03-07T13:55:57.000Z</published>
    <updated>2022-03-09T03:34:51.097Z</updated>
    
    <content type="html"><![CDATA[<p>第一章</p><hr><p>第二章</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一章&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第二章&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://degndaixingqiu.com/posts/4a17b156/"/>
    <id>http://degndaixingqiu.com/posts/4a17b156/</id>
    <published>2022-03-07T13:23:07.870Z</published>
    <updated>2022-03-09T03:34:51.098Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
