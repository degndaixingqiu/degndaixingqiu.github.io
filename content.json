[{"title":"","date":"2022-03-10T01:37:21.875Z","path":"/posts/0/","text":"","tags":[]},{"title":"基本数据结构","date":"2022-03-10T01:21:06.000Z","path":"/posts/ecd2a7a4/","text":"","tags":[]},{"title":"基本数据结构","date":"2022-03-09T09:15:41.858Z","path":"/posts/0/","text":"终端快捷运行语句：Python+文件名 Python3 中有六个标准的数据类型： Number（数值），String（字符串）， Tuple（元组）， List（列表），Set（集合），Dictionary（字典） Python 中的变量不需要声明。每个变量在使用前都必须 赋值，变量赋值以后该变量才会被创建 Number（数值） int、float、bool、complex（复数） int，表示为长整型 内置的 type() 函数可以用来查询变量所指的对象类型 1234567891011121314151617181920212223242526a = 10b = 12.5#\"\" ''均可表示字符串s1 = \"hello\"s2 = 'world'print(type(a),type(b),type(s1),type(s2))#%d表示输出整型数#%.2d，表示长度为2，不满足则在前面补0，长度大于等于2则保持原样输出。#%f表示输出浮点型，%.2f，表示保留小数点后2位。print(\"b = %.2f a = %d %s %s\" %(b,a,s1,s2))print(\"%.2f\" %b) #12.50print(\"%.3d\" %b) #012x = (1,2,3,4,5,6) #元组,元素不需要具有相同类型,且一旦创建不可变y = [1,2,3,4,5,6] #列表，元素可变z = {1:2,5:6,8:7} #字典，通过key访问print(x,y,z)print(x[0])print(z[1]) String “” ‘’均是字符串 不支持char类型 bool类型123456789#语法严格，不可用01定义bool类型f = Falseprint(type(f)) #boolt = 1print(type(t)) #int List[列表] 列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套） 列表内元素可以修改 index从0开始 列表同样可以被索引和截取，列表被截取 后返回一个包含所需元素的新列表。 123456789101112131415161718y = [1,2,3,\"p\"]x = [1,2,'ege',True,y]print(x)#[1, 2, 'ege', True, [1, 2, 3, 'p']]#从Index = 1元素输出至结束，左闭右开print(x[1:])#[2, 'ege', True, [1, 2, 3, 'p']]print(len(x))#5y.append(2.3)print(y)#[1, 2, 3, 'p', 2.3]y.clear()print(len(y))#0 Tuple（元组） 元组内元素不能修改 元素类型也可以不同 1234567891011121314151617# Tuple是()y1 = (1,2,3,\"p\")x1 = (1,2,'ege',True,y)print(x1)# 无法运行，tuple不支持改动元素# y1[4] = 12.3 # print(x1)print(x1[3]) # 输出元组的第3个元素print(x1[1:3]) #输出1-3个元素print(x1[2:]) #输出2之后所有包括2print(x1*2) #输出两边x1print(x1+y1) #连接元组 Set{集合} 无序不重复元素序列 {}或者set() 创建一个空集合必须用 set() 而不是 { }，因为 { } 是用 来创建一个空字典。 打印输出是从小到大按顺序输出，就算类型不同也可输出 123456789101112131415# setx2 = {3,2,5}print(x2) #按顺序输出x2.add(1)print(x2)x4 = {\"df\",\"grg\",3}print(x4)x4 = set(['g','2','t','yhf']) #{'2', 't', 'yhf', 'g'}print(x4)x5 = set(\"dfkg\")print(x5) #{'k', 'd', 'f', 'g'} Dictionary(字典) 字典是另一种可变容器模型，且可存储任意类型对象。 字典的每个键值 key=&gt;value 对用冒号 : 分割，每个对 之间用逗号(,)分割，整个字典包括在花括号 {} 中。 字典是一种映射类型，字典用 { } 标识，它是一个无序 的 键(key) : 值(value) 的集合 键(key)必须使用不可变类型 在同一个字典中，键(key)必须是唯一的 1234567#Dictionaryx6 = {3:\"fgg\",2:3.14,4:x5}print(x6)#拿走3x6.pop(3)print(x6) 类型转化 12345# 类型转化a = 3print(type(a))b = str(a)print(type())","tags":[]},{"title":"My first blog","date":"2022-03-07T13:55:57.000Z","path":"/posts/654572fa/","text":"第一章 第二章","tags":[]},{"title":"Hello World","date":"2022-03-07T13:23:07.870Z","path":"/posts/4a17b156/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]